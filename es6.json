{
    "arrow_functions": {
        "0 parametersc": "\nreturn (() => 5)() === 5;\n      ",
        "1 parameter, no bracketsc": "\nvar b = x => x + \"foo\";\nreturn (b(\"fee fie foe \") === \"fee fie foe foo\");\n      ",
        "multiple parametersc": "\nvar c = (v, w, x, y, z) => \"\" + v + w + x + y + z;\nreturn (c(6, 5, 4, 3, 2) === \"65432\");\n      ",
        "lexical \"this\" bindingc": "\nvar d = { x : \"bar\", y : function() { return z => this.x + z; }}.y();\nvar e = { x : \"baz\", y : d };\nreturn d(\"ley\") === \"barley\" && e.y(\"ley\") === \"barley\";\n      ",
        "\"this\" unchanged by call or applyc": "\nvar d = { x : \"foo\", y : function() { return () => this.x; }};\nvar e = { x : \"bar\" };\nreturn d.y().call(e) === \"foo\" && d.y().apply(e) === \"foo\";\n      ",
        "can't be bound, can be curriedc": "\nvar d = { x : \"bar\", y : function() { return z => this.x + z; }};\nvar e = { x : \"baz\" };\nreturn d.y().bind(e, \"ley\")() === \"barley\";\n      ",
        "lexical \"arguments\" bindingc": "\nvar f = (function() { return z => arguments[0]; }(5));\nreturn f(6) === 5;\n      ",
        "no line break between params and =>c": "\nreturn (() => {\n  try { Function(\"x\\n => 2\")(); } catch(e) { return true; }\n})();\n      ",
        "no \"prototype\" propertyc": "\nvar a = () => 5;\nreturn !a.hasOwnProperty(\"prototype\");\n      "
    },
    "const": {
        "basic supportc": "\nconst foo = 123;\nreturn (foo === 123);\n      ",
        "is block-scopedc": "\nconst bar = 123;\n{ const bar = 456; }\nreturn bar === 123;\n      ",
        "redefining a const is an errorc": "\nconst baz = 1;\ntry {\n  Function(\"const foo = 1; foo = 2;\")();\n} catch(e) {\n  return true;\n}\n      ",
        "temporal dead zonec": "\nvar passed = (function(){ try { qux; } catch(e) { return true; }}());\nconst qux = 456;\nreturn passed;\n      ",
        "basic support (strict mode)c": "\n\"use strict\";\nconst foo = 123;\nreturn (foo === 123);\n      ",
        "is block-scoped (strict mode)c": "\n'use strict';\nconst bar = 123;\n{ const bar = 456; }\nreturn bar === 123;\n      ",
        "redefining a const (strict mode)c": "\n'use strict';\nconst baz = 1;\ntry {\n  Function(\"'use strict'; const foo = 1; foo = 2;\")();\n} catch(e) {\n  return true;\n}\n      ",
        "temporal dead zone (strict mode)c": "\n'use strict';\nvar passed = (function(){ try { qux; } catch(e) { return true; }}());\nconst qux = 456;\nreturn passed;\n      "
    },
    "let": {
        "basic supportc": "\nlet foo = 123;\nreturn (foo === 123);\n      ",
        "is block-scopedc": "\nlet bar = 123;\n{ let bar = 456; }\nreturn bar === 123;\n      ",
        "for-loop statement scopec": "\nlet baz = 1;\nfor(let baz = 0; false; false) {}\nreturn baz === 1;\n      ",
        "temporal dead zonec": "\nvar passed = (function(){ try {  qux; } catch(e) { return true; }}());\nlet qux = 456;\nreturn passed;\n      ",
        "for-loop iteration scopec": "\nlet scopes = [];\nfor(let i = 0; i < 2; i++) {\n  scopes.push(function(){ return i; });\n}\nlet passed = (scopes[0]() === 0 && scopes[1]() === 1);\n\nscopes = [];\nfor(let i in { a:1, b:1 }) {\n  scopes.push(function(){ return i; });\n}\npassed &= (scopes[0]() === \"a\" && scopes[1]() === \"b\");\nreturn passed;\n      ",
        "basic support (strict mode)c": "\n'use strict';\nlet foo = 123;\nreturn (foo === 123);\n      ",
        "is block-scoped (strict mode)c": "\n'use strict';\nlet bar = 123;\n{ let bar = 456; }\nreturn bar === 123;\n      ",
        "for-loop statement scope (strict mode)c": "\n'use strict';\nlet baz = 1;\nfor(let baz = 0; false; false) {}\nreturn baz === 1;\n      ",
        "temporal dead zone (strict mode)c": "\n'use strict';\nvar passed = (function(){ try {  qux; } catch(e) { return true; }}());\nlet qux = 456;\nreturn passed;\n      ",
        "for-loop iteration scope (strict mode)c": "\n'use strict';\nlet scopes = [];\nfor(let i = 0; i < 2; i++) {\n  scopes.push(function(){ return i; });\n}\nlet passed = (scopes[0]() === 0 && scopes[1]() === 1);\n\nscopes = [];\nfor(let i in { a:1, b:1 }) {\n  scopes.push(function(){ return i; });\n}\npassed &= (scopes[0]() === \"a\" && scopes[1]() === \"b\");\nreturn passed;\n      "
    },
    "default_function_parameters": {
        "basic functionalityc": "\nreturn (function (a = 1, b = 2) { return a === 3 && b === 2; }(3));\n      ",
        "explicit undefined defers to the defaultc": "\nreturn (function (a = 1, b = 2) { return a === 1 && b === 3; }(undefined, 3));\n      ",
        "defaults can refer to previous paramsc": "\nreturn (function (a, b = a) { return b === 5; }(5));\n      ",
        "temporal dead zonec": "\nreturn (function(x = 1) {\n  try {\n    eval(\"(function(a=a){}())\");\n    return false;\n  } catch(e) {}\n  try {\n    eval(\"(function(a=b,b){}())\");\n    return false;\n  } catch(e) {}\n  return true;\n}());\n      ",
        "separate scopec": "\nreturn (function(a=function(){\n  return typeof b === 'undefined';\n}){\n  var b = 1;\n  return a();\n}());\n      "
    },
    "rest_parameters": {
        "basic functionalityc": "\nreturn (function (foo, ...args) {\n  return args instanceof Array && args + \"\" === \"bar,baz\";\n}(\"foo\", \"bar\", \"baz\"));\n      ",
        "function 'length' propertyc": "\nreturn function(a, ...b){}.length === 1 && function(...c){}.length === 0;\n      ",
        "arguments object interactionc": "\nreturn (function (foo, ...args) {\n  foo = \"qux\";\n  // The arguments object is not mapped to the\n  // parameters, even outside of strict mode.\n  return arguments.length === 3\n    && arguments[0] === \"foo\"\n    && arguments[1] === \"bar\"\n    && arguments[2] === \"baz\";\n}(\"foo\", \"bar\", \"baz\"));\n      "
    },
    "spread_(...)_operator": {
        "with arrays, in function callsc": "\nreturn Math.max(...[1, 2, 3]) === 3\n      ",
        "with arrays, in array literalsc": "\nreturn [...[1, 2, 3]][2] === 3;\n      ",
        "with strings, in function callsc": "\nreturn Math.max(...\"1234\") === 4;\n      ",
        "with strings, in array literalsc": "\nreturn [\"a\", ...\"bcd\", \"e\"][3] === \"d\";\n      ",
        "with generic iterables, in callsc": "\nvar iterable = __createIterableObject(1, 2, 3);\nreturn Math.max(...iterable) === 3;\n      ",
        "with generic iterables, in arraysc": "\nvar iterable = __createIterableObject(\"b\", \"c\", \"d\");\nreturn [\"a\", ...iterable, \"e\"][3] === \"d\";\n      ",
        "with instances of iterables, in callsc": "\nvar iterable = __createIterableObject(1, 2, 3);\nreturn Math.max(...Object.create(iterable)) === 3;\n      ",
        "with instances of iterables, in arraysc": "\nvar iterable = __createIterableObject(\"b\", \"c\", \"d\");\nreturn [\"a\", ...Object.create(iterable), \"e\"][3] === \"d\";\n      "
    },
    "class": {
        "class statementc": "\nclass C {}\nreturn typeof C === \"function\";\n      ",
        "is block-scopedc": "\nclass C {}\nvar c1 = C;\n{\n  class C {}\n  var c2 = C;\n}\nreturn C === c1;\n      ",
        "class expressionc": "\nreturn typeof class C {} === \"function\";\n      ",
        "constructorc": "\nclass C {\n  constructor() { this.x = 1; }\n}\nreturn C.prototype.constructor === C\n  && new C().x === 1;\n      ",
        "prototype methodsc": "\nclass C {\n  method() { return 2; }\n}\nreturn typeof C.prototype.method === \"function\"\n  && new C().method() === 2;\n      ",
        "static methodsc": "\nclass C {\n  static method() { return 3; }\n}\nreturn typeof C.method === \"function\"\n  && C.method() === 3;\n      ",
        "accessor propertiesc": "\nvar baz = false;\nclass C {\n  get foo() { return \"foo\"; }\n  set bar(x) { baz = x; }\n}\nnew C().bar = true;\nreturn new C().foo === \"foo\" && baz;\n      ",
        "static accessor propertiesc": "\nvar baz = false;\nclass C {\n  static get foo() { return \"foo\"; }\n  static set bar(x) { baz = x; }\n}\nC.bar = true;\nreturn C.foo === \"foo\" && baz;\n      ",
        "implicit strict modec": "\nvar c = class C {\n  static method() { return this === undefined; }\n}.method;\n\nreturn c();\n      ",
        "extendsc": "\nclass C extends Array {}\nvar c = new C();\nreturn c instanceof Array\n  && Array.isPrototypeOf(C)\n  && Array.prototype.isPrototypeOf(C.prototype);\n      ",
        "extends nullc": "\nclass C extends null {}\nvar c = new C();\nreturn !(c instanceof Object)\n  && Function.prototype.isPrototypeOf(C)\n  && Object.getPrototypeOf(C.prototype) === null;\n      "
    },
    "super": {
        "in constructorsc": "\nclass B extends class {\n  constructor(a) { return [\"foo\" + a]; }\n} {\n  constructor(a) { return super(\"bar\" + a); }\n}\nreturn new B(\"baz\")[0] === \"foobarbaz\";\n      ",
        "in methodsc": "\nclass B extends class {\n  qux(a) { return \"foo\" + a; }\n} {\n  qux(a) { return super.qux(\"bar\" + a); }\n}\nreturn new B().qux(\"baz\") === \"foobarbaz\";\n      ",
        "is statically boundc": "\nclass B extends class {\n  qux() { return \"bar\"; }\n} {\n  qux() { return super.qux() + this.corge; }\n}\nvar obj = {\n  qux: B.prototype.qux,\n  corge: \"ley\"\n};\nreturn obj.qux() === \"barley\";\n      "
    },
    "object_literal_extensions": {
        "computed propertiesc": "\nvar x = 'y';\nreturn ({ [x]: 1 }).y === 1;\n      ",
        "shorthand propertiesc": "\nvar a = 7, b = 8, c = {a,b};\nreturn c.a === 7 && c.b === 8;\n      ",
        "shorthand methodsc": "\nreturn ({ y() { return 2; } }).y() === 2;\n      "
    },
    "for..of_loops": {
        "with arraysc": "\nvar arr = [5];\nfor (var item of arr)\n  return item === 5;\n      ",
        "with stringsc": "\nvar str = \"\";\nfor (var item of \"foo\")\n  str += item;\nreturn str === \"foo\";\n      ",
        "with generic iterablesc": "\nvar result = \"\";\nvar iterable = __createIterableObject(1, 2, 3);\nfor (var item of iterable) {\n  result += item;\n}\nreturn result === \"123\";\n      ",
        "with instances of generic iterablesc": "\nvar result = \"\";\nvar iterable = __createIterableObject(1, 2, 3);\nfor (var item of Object.create(iterable)) {\n  result += item;\n}\nreturn result === \"123\";\n      "
    },
    "generators": {
        "basic functionalityc": "\nfunction * generator(){\n  yield 5; yield 6;\n};\nvar iterator = generator();\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 6 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "correct \"this\" bindingc": "\nfunction * generator(){\n  yield this.x; yield this.y;\n};\nvar iterator = { g: generator, x: 5, y: 6 }.g();\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 6 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "sendingc": "\nvar sent;\nfunction * generator(){\n  sent = [yield 5, yield 6];\n};\nvar iterator = generator();\niterator.next();\niterator.next(\"foo\");\niterator.next(\"bar\");\nreturn sent[0] === \"foo\" && sent[1] === \"bar\";\n      ",
        "%GeneratorPrototype%c": "\nfunction * generatorFn(){}\nvar ownProto = Object.getPrototypeOf(generatorFn());\nvar passed = ownProto === generatorFn.prototype;\n\nvar sharedProto = Object.getPrototypeOf(ownProto);\npassed &= sharedProto !== Object.prototype &&\n  sharedProto === Object.getPrototypeOf(function*(){}.prototype) &&\n  sharedProto.hasOwnProperty('next');\n\nreturn passed;\n      ",
        "%GeneratorPrototype%.throwc": "\nvar passed = false;\nfunction * generator(){\n  try {\n    yield 5; yield 6;\n  } catch(e) {\n    passed = (e === \"foo\");\n  }\n};\nvar iterator = generator();\niterator.next();\niterator.throw(\"foo\");\nreturn passed;\n      ",
        "%GeneratorPrototype%.returnc": "\nfunction * generator(){\n  yield 5; yield 6;\n};\nvar iterator = generator();\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.return(\"quxquux\");\npassed    &= item.value === \"quxquux\" && item.done === true;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "yield operator precedencec": "\nvar passed;\nfunction * generator(){\n  passed = yield 0 ? true : false;\n};\nvar iterator = generator();\niterator.next();\niterator.next(true);\nreturn passed;\n      ",
        "yield *, arraysc": "\nvar iterator = (function * generator() {\n  yield * [5, 6];\n}());\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 6 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "yield *, stringsc": "\nvar iterator = (function * generator() {\n  yield * \"56\";\n}());\nvar item = iterator.next();\nvar passed = item.value === \"5\" && item.done === false;\nitem = iterator.next();\npassed    &= item.value === \"6\" && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "yield *, generic iterablesc": "\nvar iterator = (function * generator() {\n  yield * __createIterableObject(5, 6, 7);\n}());\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 6 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 7 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "yield *, instances of iterablesc": "\nvar iterator = (function * generator() {\n  yield * Object.create(__createIterableObject(5, 6, 7));\n}());\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 6 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 7 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "shorthand generator methodsc": "\nvar o = {\n  * generator() {\n    yield 5; yield 6;\n  },\n};\nvar iterator = o.generator();\nvar item = iterator.next();\nvar passed = item.value === 5 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === 6 && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      "
    },
    "octal_and_binary_literals": {
        "octal literalsc": "\nreturn 0o10 === 8 && 0O10 === 8;\n      ",
        "binary literalsc": "\nreturn 0b10 === 2 && 0B10 === 2;\n      ",
        "octal supported by Number()c": "\nreturn Number('0o1') === 1;\n      ",
        "binary supported by Number()c": "\nreturn Number('0b1') === 1;\n      "
    },
    "template_strings": {
        "basic functionalityc": "\nvar a = \"ba\", b = \"QUX\";\nreturn `foo bar\n${a + \"z\"} ${b.toLowerCase()}` === \"foo bar\\nbaz qux\";\n      ",
        "tagged template stringsc": "\nvar called = false;\nfunction fn(parts, a, b) {\n  called = true;\n  return parts instanceof Array &&\n    parts[0]     === \"foo\"      &&\n    parts[1]     === \"bar\\n\"    &&\n    parts.raw[0] === \"foo\"      &&\n    parts.raw[1] === \"bar\\\\n\"   &&\n    a === 123                   &&\n    b === 456;\n}\nreturn fn `foo${123}bar\\n${456}` && called;\n      "
    },
    "RegExp_y_and_u_flags": {
        "\"y\" flagc": "\nvar re = new RegExp('\\\\w');\nvar re2 = new RegExp('\\\\w', 'y');\nre.exec('xy');\nre2.exec('xy');\nreturn (re.exec('xy')[0] === 'x' && re2.exec('xy')[0] === 'y');\n      ",
        "\"u\" flagc": "\nreturn \"ஷ\".match(/./u)[0].length === 2;\n      "
    },
    "typed_arrays": {
        "Int8Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Int8Array(buffer);         view[0] = 0x80;\nreturn view[0] === -0x80;\n      ",
        "Uint8Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Uint8Array(buffer);        view[0] = 0x100;\nreturn view[0] === 0;\n      ",
        "Uint8ClampedArrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Uint8ClampedArray(buffer); view[0] = 0x100;\nreturn view[0] === 0xFF;\n      ",
        "Int16Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Int16Array(buffer);        view[0] = 0x8000;\nreturn view[0] === -0x8000;\n      ",
        "Uint16Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Uint16Array(buffer);       view[0] = 0x10000;\nreturn view[0] === 0;\n      ",
        "Int32Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Int32Array(buffer);        view[0] = 0x80000000;\nreturn view[0] === -0x80000000;\n      ",
        "Uint32Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Uint32Array(buffer);       view[0] = 0x100000000;\nreturn view[0] === 0;\n      ",
        "Float32Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Float32Array(buffer);       view[0] = 0.1;\nreturn view[0] === 0.10000000149011612;\n      ",
        "Float64Arrayc": "\nvar buffer = new ArrayBuffer(64);\nvar view = new Float64Array(buffer);       view[0] = 0.1;\nreturn view[0] === 0.1;\n      ",
        "DataView (Int8)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setInt8 (0, 0x80);\nreturn view.getInt8(0) === -0x80;\n      ",
        "DataView (Uint8)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setUint8(0, 0x100);\nreturn view.getUint8(0) === 0;\n      ",
        "DataView (Int16)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setInt16(0, 0x8000);\nreturn view.getInt16(0) === -0x8000;\n      ",
        "DataView (Uint16)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setUint16(0, 0x10000);\nreturn view.getUint16(0) === 0;\n      ",
        "DataView (Int32)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setInt32(0, 0x80000000);\nreturn view.getInt32(0) === -0x80000000;\n      ",
        "DataView (Uint32)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setUint32(0, 0x100000000);\nreturn view.getUint32(0) === 0;\n      ",
        "DataView (Float32)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setFloat32(0, 0.1);\nreturn view.getFloat32(0) === 0.10000000149011612;\n      ",
        "DataView (Float64)c": "\nvar buffer = new ArrayBuffer(64);\nvar view = new DataView(buffer);\nview.setFloat64(0, 0.1);\nreturn view.getFloat64(0) === 0.1;\n      ",
        "%TypedArray%.fromc": "\nreturn typeof Int8Array.from === \"function\" &&\n  typeof Uint8Array.from === \"function\" &&\n  typeof Uint8ClampedArray.from === \"function\" &&\n  typeof Int16Array.from === \"function\" &&\n  typeof Uint16Array.from === \"function\" &&\n  typeof Int32Array.from === \"function\" &&\n  typeof Uint32Array.from === \"function\" &&\n  typeof Float32Array.from === \"function\" &&\n  typeof Float64Array.from === \"function\";\n",
        "%TypedArray%.ofc": "\nreturn typeof Int8Array.of === \"function\" &&\n  typeof Uint8Array.of === \"function\" &&\n  typeof Uint8ClampedArray.of === \"function\" &&\n  typeof Int16Array.of === \"function\" &&\n  typeof Uint16Array.of === \"function\" &&\n  typeof Int32Array.of === \"function\" &&\n  typeof Uint32Array.of === \"function\" &&\n  typeof Float32Array.of === \"function\" &&\n  typeof Float64Array.of === \"function\";\n",
        "%TypedArray%.prototype.subarrayc": "\nreturn typeof Int8Array.prototype.subarray === \"function\" &&\n  typeof Uint8Array.prototype.subarray === \"function\" &&\n  typeof Uint8ClampedArray.prototype.subarray === \"function\" &&\n  typeof Int16Array.prototype.subarray === \"function\" &&\n  typeof Uint16Array.prototype.subarray === \"function\" &&\n  typeof Int32Array.prototype.subarray === \"function\" &&\n  typeof Uint32Array.prototype.subarray === \"function\" &&\n  typeof Float32Array.prototype.subarray === \"function\" &&\n  typeof Float64Array.prototype.subarray === \"function\";\n",
        "%TypedArray%.prototype.joinc": "\nreturn typeof Int8Array.prototype.join === \"function\" &&\n  typeof Uint8Array.prototype.join === \"function\" &&\n  typeof Uint8ClampedArray.prototype.join === \"function\" &&\n  typeof Int16Array.prototype.join === \"function\" &&\n  typeof Uint16Array.prototype.join === \"function\" &&\n  typeof Int32Array.prototype.join === \"function\" &&\n  typeof Uint32Array.prototype.join === \"function\" &&\n  typeof Float32Array.prototype.join === \"function\" &&\n  typeof Float64Array.prototype.join === \"function\";\n",
        "%TypedArray%.prototype.indexOfc": "\nreturn typeof Int8Array.prototype.indexOf === \"function\" &&\n  typeof Uint8Array.prototype.indexOf === \"function\" &&\n  typeof Uint8ClampedArray.prototype.indexOf === \"function\" &&\n  typeof Int16Array.prototype.indexOf === \"function\" &&\n  typeof Uint16Array.prototype.indexOf === \"function\" &&\n  typeof Int32Array.prototype.indexOf === \"function\" &&\n  typeof Uint32Array.prototype.indexOf === \"function\" &&\n  typeof Float32Array.prototype.indexOf === \"function\" &&\n  typeof Float64Array.prototype.indexOf === \"function\";\n",
        "%TypedArray%.prototype.lastIndexOfc": "\nreturn typeof Int8Array.prototype.lastIndexOf === \"function\" &&\n  typeof Uint8Array.prototype.lastIndexOf === \"function\" &&\n  typeof Uint8ClampedArray.prototype.lastIndexOf === \"function\" &&\n  typeof Int16Array.prototype.lastIndexOf === \"function\" &&\n  typeof Uint16Array.prototype.lastIndexOf === \"function\" &&\n  typeof Int32Array.prototype.lastIndexOf === \"function\" &&\n  typeof Uint32Array.prototype.lastIndexOf === \"function\" &&\n  typeof Float32Array.prototype.lastIndexOf === \"function\" &&\n  typeof Float64Array.prototype.lastIndexOf === \"function\";\n",
        "%TypedArray%.prototype.slicec": "\nreturn typeof Int8Array.prototype.slice === \"function\" &&\n  typeof Uint8Array.prototype.slice === \"function\" &&\n  typeof Uint8ClampedArray.prototype.slice === \"function\" &&\n  typeof Int16Array.prototype.slice === \"function\" &&\n  typeof Uint16Array.prototype.slice === \"function\" &&\n  typeof Int32Array.prototype.slice === \"function\" &&\n  typeof Uint32Array.prototype.slice === \"function\" &&\n  typeof Float32Array.prototype.slice === \"function\" &&\n  typeof Float64Array.prototype.slice === \"function\";\n",
        "%TypedArray%.prototype.everyc": "\nreturn typeof Int8Array.prototype.every === \"function\" &&\n  typeof Uint8Array.prototype.every === \"function\" &&\n  typeof Uint8ClampedArray.prototype.every === \"function\" &&\n  typeof Int16Array.prototype.every === \"function\" &&\n  typeof Uint16Array.prototype.every === \"function\" &&\n  typeof Int32Array.prototype.every === \"function\" &&\n  typeof Uint32Array.prototype.every === \"function\" &&\n  typeof Float32Array.prototype.every === \"function\" &&\n  typeof Float64Array.prototype.every === \"function\";\n",
        "%TypedArray%.prototype.filterc": "\nreturn typeof Int8Array.prototype.filter === \"function\" &&\n  typeof Uint8Array.prototype.filter === \"function\" &&\n  typeof Uint8ClampedArray.prototype.filter === \"function\" &&\n  typeof Int16Array.prototype.filter === \"function\" &&\n  typeof Uint16Array.prototype.filter === \"function\" &&\n  typeof Int32Array.prototype.filter === \"function\" &&\n  typeof Uint32Array.prototype.filter === \"function\" &&\n  typeof Float32Array.prototype.filter === \"function\" &&\n  typeof Float64Array.prototype.filter === \"function\";\n",
        "%TypedArray%.prototype.forEachc": "\nreturn typeof Int8Array.prototype.forEach === \"function\" &&\n  typeof Uint8Array.prototype.forEach === \"function\" &&\n  typeof Uint8ClampedArray.prototype.forEach === \"function\" &&\n  typeof Int16Array.prototype.forEach === \"function\" &&\n  typeof Uint16Array.prototype.forEach === \"function\" &&\n  typeof Int32Array.prototype.forEach === \"function\" &&\n  typeof Uint32Array.prototype.forEach === \"function\" &&\n  typeof Float32Array.prototype.forEach === \"function\" &&\n  typeof Float64Array.prototype.forEach === \"function\";\n",
        "%TypedArray%.prototype.mapc": "\nreturn typeof Int8Array.prototype.map === \"function\" &&\n  typeof Uint8Array.prototype.map === \"function\" &&\n  typeof Uint8ClampedArray.prototype.map === \"function\" &&\n  typeof Int16Array.prototype.map === \"function\" &&\n  typeof Uint16Array.prototype.map === \"function\" &&\n  typeof Int32Array.prototype.map === \"function\" &&\n  typeof Uint32Array.prototype.map === \"function\" &&\n  typeof Float32Array.prototype.map === \"function\" &&\n  typeof Float64Array.prototype.map === \"function\";\n",
        "%TypedArray%.prototype.reducec": "\nreturn typeof Int8Array.prototype.reduce === \"function\" &&\n  typeof Uint8Array.prototype.reduce === \"function\" &&\n  typeof Uint8ClampedArray.prototype.reduce === \"function\" &&\n  typeof Int16Array.prototype.reduce === \"function\" &&\n  typeof Uint16Array.prototype.reduce === \"function\" &&\n  typeof Int32Array.prototype.reduce === \"function\" &&\n  typeof Uint32Array.prototype.reduce === \"function\" &&\n  typeof Float32Array.prototype.reduce === \"function\" &&\n  typeof Float64Array.prototype.reduce === \"function\";\n",
        "%TypedArray%.prototype.reduceRightc": "\nreturn typeof Int8Array.prototype.reduceRight === \"function\" &&\n  typeof Uint8Array.prototype.reduceRight === \"function\" &&\n  typeof Uint8ClampedArray.prototype.reduceRight === \"function\" &&\n  typeof Int16Array.prototype.reduceRight === \"function\" &&\n  typeof Uint16Array.prototype.reduceRight === \"function\" &&\n  typeof Int32Array.prototype.reduceRight === \"function\" &&\n  typeof Uint32Array.prototype.reduceRight === \"function\" &&\n  typeof Float32Array.prototype.reduceRight === \"function\" &&\n  typeof Float64Array.prototype.reduceRight === \"function\";\n",
        "%TypedArray%.prototype.reversec": "\nreturn typeof Int8Array.prototype.reverse === \"function\" &&\n  typeof Uint8Array.prototype.reverse === \"function\" &&\n  typeof Uint8ClampedArray.prototype.reverse === \"function\" &&\n  typeof Int16Array.prototype.reverse === \"function\" &&\n  typeof Uint16Array.prototype.reverse === \"function\" &&\n  typeof Int32Array.prototype.reverse === \"function\" &&\n  typeof Uint32Array.prototype.reverse === \"function\" &&\n  typeof Float32Array.prototype.reverse === \"function\" &&\n  typeof Float64Array.prototype.reverse === \"function\";\n",
        "%TypedArray%.prototype.somec": "\nreturn typeof Int8Array.prototype.some === \"function\" &&\n  typeof Uint8Array.prototype.some === \"function\" &&\n  typeof Uint8ClampedArray.prototype.some === \"function\" &&\n  typeof Int16Array.prototype.some === \"function\" &&\n  typeof Uint16Array.prototype.some === \"function\" &&\n  typeof Int32Array.prototype.some === \"function\" &&\n  typeof Uint32Array.prototype.some === \"function\" &&\n  typeof Float32Array.prototype.some === \"function\" &&\n  typeof Float64Array.prototype.some === \"function\";\n",
        "%TypedArray%.prototype.sortc": "\nreturn typeof Int8Array.prototype.sort === \"function\" &&\n  typeof Uint8Array.prototype.sort === \"function\" &&\n  typeof Uint8ClampedArray.prototype.sort === \"function\" &&\n  typeof Int16Array.prototype.sort === \"function\" &&\n  typeof Uint16Array.prototype.sort === \"function\" &&\n  typeof Int32Array.prototype.sort === \"function\" &&\n  typeof Uint32Array.prototype.sort === \"function\" &&\n  typeof Float32Array.prototype.sort === \"function\" &&\n  typeof Float64Array.prototype.sort === \"function\";\n",
        "%TypedArray%.prototype.copyWithinc": "\nreturn typeof Int8Array.prototype.copyWithin === \"function\" &&\n  typeof Uint8Array.prototype.copyWithin === \"function\" &&\n  typeof Uint8ClampedArray.prototype.copyWithin === \"function\" &&\n  typeof Int16Array.prototype.copyWithin === \"function\" &&\n  typeof Uint16Array.prototype.copyWithin === \"function\" &&\n  typeof Int32Array.prototype.copyWithin === \"function\" &&\n  typeof Uint32Array.prototype.copyWithin === \"function\" &&\n  typeof Float32Array.prototype.copyWithin === \"function\" &&\n  typeof Float64Array.prototype.copyWithin === \"function\";\n",
        "%TypedArray%.prototype.findc": "\nreturn typeof Int8Array.prototype.find === \"function\" &&\n  typeof Uint8Array.prototype.find === \"function\" &&\n  typeof Uint8ClampedArray.prototype.find === \"function\" &&\n  typeof Int16Array.prototype.find === \"function\" &&\n  typeof Uint16Array.prototype.find === \"function\" &&\n  typeof Int32Array.prototype.find === \"function\" &&\n  typeof Uint32Array.prototype.find === \"function\" &&\n  typeof Float32Array.prototype.find === \"function\" &&\n  typeof Float64Array.prototype.find === \"function\";\n",
        "%TypedArray%.prototype.findIndexc": "\nreturn typeof Int8Array.prototype.findIndex === \"function\" &&\n  typeof Uint8Array.prototype.findIndex === \"function\" &&\n  typeof Uint8ClampedArray.prototype.findIndex === \"function\" &&\n  typeof Int16Array.prototype.findIndex === \"function\" &&\n  typeof Uint16Array.prototype.findIndex === \"function\" &&\n  typeof Int32Array.prototype.findIndex === \"function\" &&\n  typeof Uint32Array.prototype.findIndex === \"function\" &&\n  typeof Float32Array.prototype.findIndex === \"function\" &&\n  typeof Float64Array.prototype.findIndex === \"function\";\n",
        "%TypedArray%.prototype.fillc": "\nreturn typeof Int8Array.prototype.fill === \"function\" &&\n  typeof Uint8Array.prototype.fill === \"function\" &&\n  typeof Uint8ClampedArray.prototype.fill === \"function\" &&\n  typeof Int16Array.prototype.fill === \"function\" &&\n  typeof Uint16Array.prototype.fill === \"function\" &&\n  typeof Int32Array.prototype.fill === \"function\" &&\n  typeof Uint32Array.prototype.fill === \"function\" &&\n  typeof Float32Array.prototype.fill === \"function\" &&\n  typeof Float64Array.prototype.fill === \"function\";\n",
        "%TypedArray%.prototype.keysc": "\nreturn typeof Int8Array.prototype.keys === \"function\" &&\n  typeof Uint8Array.prototype.keys === \"function\" &&\n  typeof Uint8ClampedArray.prototype.keys === \"function\" &&\n  typeof Int16Array.prototype.keys === \"function\" &&\n  typeof Uint16Array.prototype.keys === \"function\" &&\n  typeof Int32Array.prototype.keys === \"function\" &&\n  typeof Uint32Array.prototype.keys === \"function\" &&\n  typeof Float32Array.prototype.keys === \"function\" &&\n  typeof Float64Array.prototype.keys === \"function\";\n",
        "%TypedArray%.prototype.valuesc": "\nreturn typeof Int8Array.prototype.values === \"function\" &&\n  typeof Uint8Array.prototype.values === \"function\" &&\n  typeof Uint8ClampedArray.prototype.values === \"function\" &&\n  typeof Int16Array.prototype.values === \"function\" &&\n  typeof Uint16Array.prototype.values === \"function\" &&\n  typeof Int32Array.prototype.values === \"function\" &&\n  typeof Uint32Array.prototype.values === \"function\" &&\n  typeof Float32Array.prototype.values === \"function\" &&\n  typeof Float64Array.prototype.values === \"function\";\n",
        "%TypedArray%.prototype.entriesc": "\nreturn typeof Int8Array.prototype.entries === \"function\" &&\n  typeof Uint8Array.prototype.entries === \"function\" &&\n  typeof Uint8ClampedArray.prototype.entries === \"function\" &&\n  typeof Int16Array.prototype.entries === \"function\" &&\n  typeof Uint16Array.prototype.entries === \"function\" &&\n  typeof Int32Array.prototype.entries === \"function\" &&\n  typeof Uint32Array.prototype.entries === \"function\" &&\n  typeof Float32Array.prototype.entries === \"function\" &&\n  typeof Float64Array.prototype.entries === \"function\";\n"
    },
    "Map": {
        "basic functionalityc": "\nvar key = {};\nvar map = new Map();\n\nmap.set(key, 123);\n\nreturn map.has(key) && map.get(key) === 123;\n      ",
        "constructor argumentsc": "\nvar key1 = {};\nvar key2 = {};\nvar map = new Map([[key1, 123], [key2, 456]]);\n\nreturn map.has(key1) && map.get(key1) === 123 &&\n       map.has(key2) && map.get(key2) === 456;\n      ",
        "Map.prototype.set returns thisc": "\nvar map = new Map();\nreturn map.set(0, 0) === map;\n      ",
        "-0 key converts to +0c": "\nvar map = new Map();\nmap.set(-0, \"foo\");\nvar k;\nmap.forEach(function (value, key) {\n  k = 1 / key;\n});\nreturn k === Infinity && map.get(+0) == \"foo\";\n      ",
        "Map.prototype.sizec": "\nvar key = {};\nvar map = new Map();\n\nmap.set(key, 123);\n\nreturn map.size === 1;\n      ",
        "Map.prototype.deletec": "\nreturn typeof Map.prototype.delete === \"function\";\n      ",
        "Map.prototype.clearc": "\nreturn typeof Map.prototype.clear === \"function\";\n      ",
        "Map.prototype.forEachc": "\nreturn typeof Map.prototype.forEach === \"function\";\n      ",
        "Map.prototype.keysc": "\nreturn typeof Map.prototype.keys === \"function\";\n      ",
        "Map.prototype.valuesc": "\nreturn typeof Map.prototype.values === \"function\";\n      ",
        "Map.prototype.entriesc": "\nreturn typeof Map.prototype.entries === \"function\";\n      "
    },
    "Set": {
        "basic functionalityc": "\nvar obj = {};\nvar set = new Set();\n\nset.add(123);\nset.add(123);\n\nreturn set.has(123);\n      ",
        "constructor argumentsc": "\nvar obj1 = {};\nvar obj2 = {};\nvar set = new Set([obj1, obj2]);\n\nreturn set.has(obj1) && set.has(obj2);\n      ",
        "Set.prototype.add returns thisc": "\nvar set = new Set();\nreturn set.add(0) === set;\n      ",
        "-0 key converts to +0c": "\nvar set = new Set();\nset.add(-0);\nvar k;\nset.forEach(function (value) {\n  k = 1 / value;\n});\nreturn k === Infinity && set.has(+0);\n      ",
        "Set.prototype.sizec": "\nvar obj = {};\nvar set = new Set();\n\nset.add(123);\nset.add(123);\nset.add(456);\n\nreturn set.size === 2;\n      ",
        "Set.prototype.deletec": "\nreturn typeof Set.prototype.delete === \"function\";\n      ",
        "Set.prototype.clearc": "\nreturn typeof Set.prototype.clear === \"function\";\n      ",
        "Set.prototype.forEachc": "\nreturn typeof Set.prototype.forEach === \"function\";\n      ",
        "Set.prototype.keysc": "\nreturn typeof Set.prototype.keys === \"function\";\n      ",
        "Set.prototype.valuesc": "\nreturn typeof Set.prototype.values === \"function\";\n      ",
        "Set.prototype.entriesc": "\nreturn typeof Set.prototype.entries === \"function\";\n      "
    },
    "WeakMap": {
        "basic functionalityc": "\nvar key = {};\nvar weakmap = new WeakMap();\n\nweakmap.set(key, 123);\n\nreturn weakmap.has(key) && weakmap.get(key) === 123;\n      ",
        "constructor argumentsc": "\nvar key1 = {};\nvar key2 = {};\nvar weakmap = new WeakMap([[key1, 123], [key2, 456]]);\n\nreturn weakmap.has(key1) && weakmap.get(key1) === 123 &&\n       weakmap.has(key2) && weakmap.get(key2) === 456;\n      ",
        "WeakMap.prototype.set returns thisc": "\nvar weakmap = new WeakMap();\nvar key = {};\nreturn weakmap.set(key, 0) === weakmap;\n      ",
        "WeakMap.prototype.deletec": "\nreturn typeof WeakMap.prototype.delete === \"function\";\n      "
    },
    "WeakSet": {
        "basic functionalityc": "\nvar obj1 = {}, obj2 = {};\nvar weakset = new WeakSet();\n\nweakset.add(obj1);\nweakset.add(obj1);\n\nreturn weakset.has(obj1);\n      ",
        "constructor argumentsc": "\nvar obj1 = {}, obj2 = {};\nvar weakset = new WeakSet([obj1, obj2]);\n\nreturn weakset.has(obj1) && weakset.has(obj2);\n      ",
        "WeakSet.prototype.add returns thisc": "\nvar weakset = new WeakSet();\nvar obj = {};\nreturn weakset.add(obj) === weakset;\n      ",
        "WeakSet.prototype.deletec": "\nreturn typeof WeakSet.prototype.delete === \"function\";\n      "
    },
    "Proxy": {
        "\"get\" handlerc": "\nvar proxied = { };\nvar proxy = new Proxy(proxied, {\n  get: function (t, k, r) {\n    return t === proxied && k === \"foo\" && r === proxy && 5;\n  }\n});\nreturn proxy.foo === 5;\n      ",
        "\"get\" handler, instances of proxiesc": "\nvar proxied = { };\nvar proxy = Object.create(new Proxy(proxied, {\n  get: function (t, k, r) {\n    return t === proxied && k === \"foo\" && r === proxy && 5;\n  }\n}));\nreturn proxy.foo === 5;\n      ",
        "\"set\" handlerc": "\nvar proxied = { };\nvar passed = false;\nvar proxy = new Proxy(proxied, {\n  set: function (t, k, v, r) {\n    passed = t === proxied && k + v === \"foobar\" && r === proxy;\n  }\n});\nproxy.foo = \"bar\";\nreturn passed;\n      ",
        "\"set\" handler, instances of proxiesc": "\nvar proxied = { };\nvar passed = false;\nvar proxy = Object.create(new Proxy(proxied, {\n  set: function (t, k, v, r) {\n    passed = t === proxied && k + v === \"foobar\" && r === proxy;\n  }\n}));\nproxy.foo = \"bar\";\nreturn passed;\n      ",
        "\"has\" handlerc": "\nvar proxied = {};\nvar passed = false;\n\"foo\" in new Proxy(proxied, {\n  has: function (t, k) {\n    passed = t === proxied && k === \"foo\";\n  }\n});\nreturn passed;\n      ",
        "\"has\" handler, instances of proxiesc": "\nvar proxied = {};\nvar passed = false;\n\"foo\" in Object.create(new Proxy(proxied, {\n  has: function (t, k) {\n    passed = t === proxied && k === \"foo\";\n  }\n}));\nreturn passed;\n      ",
        "\"deleteProperty\" handlerc": "\nvar proxied = {};\n  var passed = false;\n  delete new Proxy(proxied, {\n    deleteProperty: function (t, k) {\n      passed = t === proxied && k === \"foo\";\n    }\n  }).foo;\n  return passed;\n",
        "\"getOwnPropertyDescriptor\" handlerc": "\nvar proxied = {};\nvar fakeDesc = { value: \"foo\", configurable: true };\nvar returnedDesc = Object.getOwnPropertyDescriptor(\n  new Proxy(proxied, {\n    getOwnPropertyDescriptor: function (t, k) {\n      return t === proxied && k === \"foo\" && fakeDesc;\n    }\n  }),\n  \"foo\"\n);\nreturn (returnedDesc.value     === fakeDesc.value\n  && returnedDesc.configurable === fakeDesc.configurable\n  && returnedDesc.writable     === false\n  && returnedDesc.enumerable   === false);\n      ",
        "\"defineProperty\" handlerc": "\nvar proxied = {};\nvar passed = false;\nObject.defineProperty(\n  new Proxy(proxied, {\n    defineProperty: function (t, k, d) {\n      passed = t === proxied && k === \"foo\" && d.value === 5;\n      return true;\n    }\n  }),\n  \"foo\",\n  { value: 5, configurable: true }\n);\nreturn passed;\n      ",
        "\"getPrototypeOf\" handlerc": "\nvar proxied = {};\nvar fakeProto = {};\nvar proxy = new Proxy(proxied, {\n  getPrototypeOf: function (t) {\n    return t === proxied && fakeProto;\n  }\n});\nreturn Object.getPrototypeOf(proxy) === fakeProto;\n      ",
        "\"setPrototypeOf\" handlerc": "\nvar proxied = {};\nvar newProto = {};\nvar passed = false;\nObject.setPrototypeOf(\n  new Proxy(proxied, {\n    setPrototypeOf: function (t, p) {\n      passed = t === proxied && p === newProto;\n      return true;\n    }\n  }),\n  newProto\n);\nreturn passed;\n      ",
        "\"isExtensible\" handlerc": "\nvar proxied = {};\nvar passed = false;\nObject.isExtensible(\n  new Proxy(proxied, {\n    isExtensible: function (t) {\n      passed = t === proxied; return true;\n    }\n  })\n);\nreturn passed;\n      ",
        "\"preventExtensions\" handlerc": "\nvar proxied = {};\nvar passed = false;\nObject.preventExtensions(\n  new Proxy(proxied, {\n    preventExtensions: function (t) {\n      passed = t === proxied;\n      return Object.preventExtensions(proxied);\n    }\n  })\n);\nreturn passed;\n      ",
        "\"enumerate\" handlerc": "\nvar proxied = {};\nvar passed = false;\nfor (var i in\n  new Proxy(proxied, {\n    enumerate: function (t) {\n      passed = t === proxied;\n      return {\n        next: function(){ return { done: true, value: null };}\n      };\n    }\n  })\n) { }\nreturn passed;\n      ",
        "\"ownKeys\" handlerc": "\nvar proxied = {};\nvar passed = false;\nObject.keys(\n  new Proxy(proxied, {\n    ownKeys: function (t) {\n      passed = t === proxied; return [];\n    }\n  })\n);\nreturn passed;\n      ",
        "\"apply\" handlerc": "\nvar proxied = function(){};\nvar passed = false;\nvar host = {\n  method: new Proxy(proxied, {\n    apply: function (t, thisArg, args) {\n      passed = t === proxied && thisArg === host && args + \"\" === \"foo,bar\";\n    }\n  })\n};\nhost.method(\"foo\", \"bar\");\nreturn passed;\n      ",
        "\"construct\" handlerc": "\nvar proxied = function(){};\nvar passed = false;\nnew new Proxy(proxied, {\n  construct: function (t, args) {\n    passed = t === proxied && args + \"\" === \"foo,bar\";\n    return {};\n  }\n})(\"foo\",\"bar\");\nreturn passed;\n      ",
        "Proxy.revocablec": "\nvar obj = Proxy.revocable({}, { get: function() { return 5; } });\nvar passed = (obj.proxy.foo === 5);\nobj.revoke();\ntry {\n  obj.proxy.foo;\n} catch(e) {\n  passed &= e instanceof TypeError;\n}\nreturn passed;\n      ",
        "Array.isArray supportc": "\nreturn Array.isArray(new Proxy([], {}));\n      ",
        "JSON.stringify supportc": "\nreturn JSON.stringify(new Proxy(['foo'], {})) === '[\"foo\"]';\n      "
    },
    "Reflect": {
        "Reflect.getc": "\nreturn Reflect.get({ qux: 987 }, \"qux\") === 987;\n      ",
        "Reflect.setc": "\nvar obj = {};\nReflect.set(obj, \"quux\", 654);\nreturn obj.quux === 654;\n      ",
        "Reflect.hasc": "\nreturn Reflect.has({ qux: 987 }, \"qux\");\n      ",
        "Reflect.deletePropertyc": "\nvar obj = { bar: 456 };\nReflect.deleteProperty(obj, \"bar\");\nreturn !(\"bar\" in obj);\n      ",
        "Reflect.getOwnPropertyDescriptorc": "\nvar obj = { baz: 789 };\nvar desc = Reflect.getOwnPropertyDescriptor(obj, \"baz\");\nreturn desc.value === 789 &&\n  desc.configurable && desc.writable && desc.enumerable;\n      ",
        "Reflect.definePropertyc": "\nvar obj = {};\nReflect.defineProperty(obj, \"foo\", { value: 123 });\nreturn obj.foo === 123;\n      ",
        "Reflect.getPrototypeOfc": "\nreturn Reflect.getPrototypeOf([]) === Array.prototype;\n      ",
        "Reflect.setPrototypeOfc": "\nvar obj = {};\nReflect.setPrototypeOf(obj, Array.prototype);\nreturn obj instanceof Array;\n      ",
        "Reflect.isExtensiblec": "\nreturn Reflect.isExtensible({}) &&\n  !Reflect.isExtensible(Object.preventExtensions({}));\n      ",
        "Reflect.preventExtensionsc": "\nvar obj = {};\nReflect.preventExtensions(obj);\nreturn !Object.isExtensible(obj);\n      ",
        "Reflect.enumeratec": "\nvar obj = { foo: 1, bar: 2 };\nvar iterator = Reflect.enumerate(obj);\n\nvar item = iterator.next();\nvar passed = item.value === \"foo\" && item.done === false;\nitem = iterator.next();\npassed    &= item.value === \"bar\" && item.done === false;\nitem = iterator.next();\npassed    &= item.value === undefined && item.done === true;\nreturn passed;\n      ",
        "Reflect.ownKeysc": "\nvar obj = { foo: 1, bar: 2 };\nreturn Reflect.ownKeys(obj) + \"\" === \"foo,bar\";\n      ",
        "Reflect.applyc": "\nreturn Reflect.apply(Array.prototype.push, [1,2], [3,4,5]) === 5;\n      ",
        "Reflect.constructc": "\nreturn Reflect.construct(function(a, b, c) {\n  this.qux = a + b + c;\n}, [\"foo\", \"bar\", \"baz\"]).qux === \"foobarbaz\";\n      "
    },
    "destructuring": {
        "with arraysc": "\nvar [a, , [b], c] = [5, null, [6]];\nreturn a === 5 && b === 6 && c === undefined;\n      ",
        "with stringsc": "\nvar [a, b, c] = \"bar\";\nreturn a === \"b\" && b === \"a\" && c === \"r\";\n      ",
        "with generic iterablesc": "\nvar iterable = __createIterableObject(1, 2, 3);\nvar [a, b, c] = iterable;\nreturn a === 1 && b === 2 && c === 3;\n      ",
        "with instances of generic iterablesc": "\nvar iterable = __createIterableObject(1, 2, 3);\nvar [a, b, c] = Object.create(iterable);\nreturn a === 1 && b === 2 && c === 3;\n      ",
        "with objectsc": "\nvar {c, x:d, e} = {c:7, x:8};\nreturn c === 7 && d === 8 && e === undefined;\n      ",
        "computed propertiesc": "\nvar qux = \"corge\";\nvar { [qux]: grault } = { corge: \"garply\" };\nreturn grault === \"garply\";\n      ",
        "multiples in a single var statementc": "\nvar [a,b] = [5,6], {c,d} = {c:7,d:8};\nreturn a === 5 && b === 6 && c === 7 && d === 8;\n      ",
        "nestedc": "\nvar [e, {x:f, g}] = [9, {x:10}];\nreturn e === 9 && f === 10 && g === undefined;\n      ",
        "in parametersc": "\nreturn (function({a, x:b, y:e}, [c, d]) {\n  return a === 1 && b === 2 && c === 3 &&\n    d === 4 && e === undefined;\n}({a:1, x:2}, [3, 4]));\n      ",
        "in for-in loop headsc": "\nfor(var [i, j, k] in { qux: 1 }) {\n  return i === \"q\" && j === \"u\" && k === \"x\";\n}\n      ",
        "in for-of loop headsc": "\nfor(var [i, j, k] of [[1,2,3]]) {\n  return i === 1 && j === 2 && k === 3;\n}\n      ",
        "restc": "\nvar [a, ...b] = [3, 4, 5];\nvar [c, ...d] = [6];\nreturn a === 3 && b instanceof Array && (b + \"\") === \"4,5\" &&\n   c === 6 && d instanceof Array && d.length === 0;\n      ",
        "nested restc": "\nvar a = [1, 2, 3], first, last;\n[first, ...[a[2], last]] = a;\nreturn first === 1 && last === 3 && (a + \"\") === \"1,2,2\";\n      ",
        "defaultsc": "\nvar {a = 1, b = 0, c = 3} = {b:2, c:undefined};\nreturn a === 1 && b === 2 && c === 3;\n      ",
        "defaults in parametersc": "\nreturn (function({a = 1, b = 0, c = 3, x:d = 0, y:e = 5, z:f}) {\n  return a === 1 && b === 2 && c === 3 && d === 4 &&\n    e === 5 && f === undefined;\n}({b:2, c:undefined, x:4}));\n      "
    },
    "Object_static_methods": {
        "Object.assignc": "\nvar o = Object.assign({a:true}, {b:true}, {c:true});\nreturn \"a\" in o && \"b\" in o && \"c\" in o;\n      ",
        "Object.isc": "\nreturn typeof Object.is === 'function' &&\n  Object.is(NaN, NaN) &&\n !Object.is(-0, 0);\n      ",
        "Object.getOwnPropertySymbolsc": "\nvar o = {};\nvar sym = Symbol();\no[sym] = \"foo\";\nreturn Object.getOwnPropertySymbols(o)[0] === sym;\n      ",
        "Object.setPrototypeOfc": "\nreturn Object.setPrototypeOf({}, Array.prototype) instanceof Array;\n      "
    },
    "function_name_property": {
        "function statementsc": "\nfunction foo(){};\nreturn foo.name === 'foo' &&\n  (function(){}).name === '';\n      ",
        "function expressionsc": "\nreturn (function foo(){}).name === 'foo' &&\n  (function(){}).name === '';\n      ",
        "new Functionc": "\nreturn (new Function).name === \"anonymous\";\n      ",
        "bound functionsc": "\nfunction foo() {};\nreturn foo.bind({}).name === \"bound foo\" &&\n  (function(){}).bind({}).name === \"bound \";\n      ",
        "variables (function)c": "\nvar foo = function() {};\nvar bar = function baz() {};\nreturn foo.name === \"foo\" && bar.name === \"baz\";\n      ",
        "object methods (function)c": "\nvar o = { foo: function(){}, bar: function baz(){}};\no.qux = function(){};\nreturn o.foo.name === \"foo\" &&\n       o.bar.name === \"baz\" &&\n       o.qux.name === \"\";\n      ",
        "accessor propertiesc": "\nvar o = { get foo(){}, set foo(x){} };\nvar descriptor = Object.getOwnPropertyDescriptor(o, \"foo\");\nreturn descriptor.get.name === \"get foo\" &&\n       descriptor.set.name === \"set foo\";\n      ",
        "shorthand methodsc": "\nvar o = { foo(){} };\nreturn o.foo.name === \"foo\";\n      ",
        "symbol-keyed methodsc": "\nvar sym1 = Symbol(\"foo\");\nvar sym2 = Symbol();\nvar o = {\n  [sym1]: function(){},\n  [sym2]: function(){}\n};\n\nreturn o[sym1].name === \"[foo]\" &&\n       o[sym2].name === \"\";\n      ",
        "class statementsc": "\nclass foo {};\nclass bar { static name() {} };\nreturn foo.name === \"foo\" &&\n  typeof bar.name === \"function\";\n      ",
        "class expressionsc": "\nreturn class foo {}.name === \"foo\" &&\n  typeof class bar { static name() {} }.name === \"function\";\n      ",
        "variables (class)c": "\nvar foo = class {};\nvar bar = class baz {};\nvar qux = class { static name() {} };\nreturn foo.name === \"foo\" &&\n       bar.name === \"baz\" &&\n       typeof qux.name === \"function\";\n      ",
        "object methods (class)c": "\nvar o = { foo: class {}, bar: class baz {}};\no.qux = class {};\nreturn o.foo.name === \"foo\" &&\n       o.bar.name === \"baz\" &&\n       o.qux.name === \"\";\n      ",
        "class prototype methodsc": "\nclass C { foo(){} };\nreturn (new C).foo.name === \"foo\";\n      ",
        "class static methodsc": "\nclass C { static foo(){} };\nreturn C.foo.name === \"foo\";\n      ",
        "isn't writable, is configurablec": "\nvar descriptor = Object.getOwnPropertyDescriptor(function f(){},\"name\");\nreturn descriptor.enumerable   === false &&\n       descriptor.writable     === false &&\n       descriptor.configurable === true;\n      "
    },
    "String_static_methods": {
        "String.rawc": "\nreturn typeof String.raw === 'function';\n      ",
        "String.fromCodePointc": "\nreturn typeof String.fromCodePoint === 'function';\n      "
    },
    "String.prototype_methods": {
        "String.prototype.codePointAtc": "\nreturn typeof String.prototype.codePointAt === 'function';\n      ",
        "String.prototype.normalizec": "\nreturn typeof String.prototype.normalize === \"function\"\n  && \"c\\u0327\\u0301\".normalize(\"NFC\") === \"\\u1e09\"\n  && \"\\u1e09\".normalize(\"NFD\") === \"c\\u0327\\u0301\";\n      ",
        "String.prototype.repeatc": "\nreturn typeof String.prototype.repeat === 'function'\n  && \"foo\".repeat(3) === \"foofoofoo\";\n      ",
        "String.prototype.startsWithc": "\nreturn typeof String.prototype.startsWith === 'function'\n  && \"foobar\".startsWith(\"foo\");\n      ",
        "String.prototype.endsWithc": "\nreturn typeof String.prototype.endsWith === 'function'\n  && \"foobar\".endsWith(\"bar\");\n      ",
        "String.prototype.includesc": "\nreturn typeof String.prototype.includes === 'function'\n  && \"foobar\".includes(\"oba\");\n      "
    },
    "Symbol": {
        "basic functionalityc": "\nvar object = {};\nvar symbol = Symbol();\nvar value = {};\nobject[symbol] = value;\nreturn object[symbol] === value;\n      ",
        "typeof supportc": "\nreturn typeof Symbol() === \"symbol\";\n      ",
        "symbol keys are hidden to pre-ES6 codec": "\nvar object = {};\nvar symbol = Symbol();\nobject[symbol] = 1;\n\nfor (var x in object){}\nvar passed = (x !== symbol);\n\nif (Object.keys && Object.getOwnPropertyNames) {\n  passed &= Object.keys(object).length === 0\n    && Object.getOwnPropertyNames(object).length === 0;\n}\n\nreturn passed;\n      ",
        "Object.defineProperty supportc": "\nvar object = {};\nvar symbol = Symbol();\nvar value = {};\n\nif (Object.defineProperty) {\n  Object.defineProperty(object, symbol, { value: value });\n  return object[symbol] === value;\n}\n\nreturn passed;\n      ",
        "cannot coerce to string or numberc": "\nvar symbol = Symbol();\n\ntry {\n  symbol + \"\";\n  return false;\n}\ncatch(e) {}\n\ntry {\n  symbol + 0;\n  return false;\n} catch(e) {}\n\nreturn true;\n      ",
        "can convert with String()c": "\nreturn String(Symbol(\"foo\")) === \"Symbol(foo)\";\n      ",
        "new Symbol() throwsc": "\nvar symbol = Symbol();\ntry {\n  new Symbol();\n} catch(e) {\n  return true;\n}\n      ",
        "Object(symbol)c": "\nvar symbol = Symbol();\nvar symbolObject = Object(symbol);\n\nreturn typeof symbolObject === \"object\" &&\n  symbolObject == symbol &&\n  symbolObject.valueOf() === symbol;\n      ",
        "global symbol registryc": "\nvar symbol = Symbol.for('foo');\nreturn Symbol.for('foo') === symbol &&\n   Symbol.keyFor(symbol) === 'foo';\n      "
    },
    "well-known_symbols": {
        "Symbol.hasInstancec": "\nvar passed = false;\nvar obj = { foo: true };\nvar C = function(){};\nObject.defineProperty(C, Symbol.hasInstance, {\n  value: function(inst) { passed = inst.foo; return false; }\n});\nobj instanceof C;\nreturn passed;\n      ",
        "Symbol.isConcatSpreadablec": "\nvar a = [], b = [];\nb[Symbol.isConcatSpreadable] = false;\na = a.concat(b);\nreturn a[0] === b;\n      ",
        "Symbol.iteratorc": "\nvar a = 0, b = {};\nb[Symbol.iterator] = function() {\n  return {\n    next: function() {\n      return {\n        done: a++ === 1,\n        value: \"foo\"\n      };\n    }\n  };\n};\nvar c;\nfor (c of b) {}\nreturn c === \"foo\";\n      ",
        "Symbol.speciesc": "\nreturn RegExp[Symbol.species] === RegExp\n  && Array[Symbol.species] === Array\n  && !(Symbol.species in Object);\n      ",
        "Symbol.toPrimitivec": "\nvar a = {}, b = {}, c = {};\nvar passed = 0;\na[Symbol.toPrimitive] = function(hint) { passed += hint === \"number\";  return 0; };\nb[Symbol.toPrimitive] = function(hint) { passed += hint === \"string\";  return 0; };\nc[Symbol.toPrimitive] = function(hint) { passed += hint === \"default\"; return 0; };\n\na >= 0;\nb in {};\nc == 0;\nreturn passed === 3;\n      ",
        "Symbol.toStringTagc": "\nvar a = {};\na[Symbol.toStringTag] = \"foo\";\nreturn (a + \"\") === \"[object foo]\";\n      ",
        "Symbol.unscopablesc": "\nvar a = { foo: 1, bar: 2 };\na[Symbol.unscopables] = { bar: true };\nwith (a) {\n  return foo === 1 && typeof bar === \"undefined\";\n}\n      "
    },
    "RegExp.prototype_properties": {
        "RegExp.prototype.flagsc": "\nreturn /./igm.flags === \"gim\" && /./.flags === \"\";\n      ",
        "RegExp.prototype[Symbol.match]c": "\nreturn typeof RegExp.prototype[Symbol.match] === 'function';\n      ",
        "RegExp.prototype[Symbol.replace]c": "\nreturn typeof RegExp.prototype[Symbol.replace] === 'function';\n      ",
        "RegExp.prototype[Symbol.split]c": "\nreturn typeof RegExp.prototype[Symbol.split] === 'function';\n      ",
        "RegExp.prototype[Symbol.search]c": "\nreturn typeof RegExp.prototype[Symbol.search] === 'function';\n      "
    },
    "Array_static_methods": {
        "Array.fromc": "\nreturn typeof Array.from === 'function';\n      ",
        "Array.ofc": "\nreturn typeof Array.of === 'function' &&\n  Array.of(2)[0] === 2;\n      "
    },
    "Array.prototype_methods": {
        "Array.prototype.copyWithinc": "\nreturn typeof Array.prototype.copyWithin === 'function';\n      ",
        "Array.prototype.findc": "\nreturn typeof Array.prototype.find === 'function';\n      ",
        "Array.prototype.findIndexc": "\nreturn typeof Array.prototype.findIndex === 'function';\n      ",
        "Array.prototype.fillc": "\nreturn typeof Array.prototype.fill === 'function';\n      ",
        "Array.prototype.keysc": "\nreturn typeof Array.prototype.keys === 'function';\n      ",
        "Array.prototype.valuesc": "\nreturn typeof Array.prototype.values === 'function';\n      ",
        "Array.prototype.entriesc": "\nreturn typeof Array.prototype.entries === 'function';\n      ",
        "Array.prototype[Symbol.unscopables]c": "\nvar unscopables = Array.prototype[Symbol.unscopables];\nif (!unscopables) {\n  return false;\n}\nvar ns = \"find,findIndex,fill,copyWithin,entries,keys,values\".split(\",\");\nfor (var i = 0; i < ns.length; i++) {\n  if (Array.prototype[ns[i]] && !unscopables[ns[i]]) return false;\n}\nreturn true;\n      "
    },
    "Number_properties": {
        "Number.isFinitec": "\nreturn typeof Number.isFinite === 'function';\n      ",
        "Number.isIntegerc": "\nreturn typeof Number.isInteger === 'function';\n      ",
        "Number.isSafeIntegerc": "\nreturn typeof Number.isSafeInteger === 'function';\n      ",
        "Number.isNaNc": "\nreturn typeof Number.isNaN === 'function';\n      ",
        "Number.EPSILONc": "\nreturn typeof Number.EPSILON === 'number';\n      ",
        "Number.MIN_SAFE_INTEGERc": "\nreturn typeof Number.MIN_SAFE_INTEGER === 'number';\n      ",
        "Number.MAX_SAFE_INTEGERc": "\nreturn typeof Number.MAX_SAFE_INTEGER === 'number';\n      "
    },
    "Math_methods": {
        "Math.clz32c": "\nreturn typeof Math.clz32 === \"function\";\n",
        "Math.imulc": "\nreturn typeof Math.imul === \"function\";\n",
        "Math.signc": "\nreturn typeof Math.sign === \"function\";\n",
        "Math.log10c": "\nreturn typeof Math.log10 === \"function\";\n",
        "Math.log2c": "\nreturn typeof Math.log2 === \"function\";\n",
        "Math.log1pc": "\nreturn typeof Math.log1p === \"function\";\n",
        "Math.expm1c": "\nreturn typeof Math.expm1 === \"function\";\n",
        "Math.coshc": "\nreturn typeof Math.cosh === \"function\";\n",
        "Math.sinhc": "\nreturn typeof Math.sinh === \"function\";\n",
        "Math.tanhc": "\nreturn typeof Math.tanh === \"function\";\n",
        "Math.acoshc": "\nreturn typeof Math.acosh === \"function\";\n",
        "Math.asinhc": "\nreturn typeof Math.asinh === \"function\";\n",
        "Math.atanhc": "\nreturn typeof Math.atanh === \"function\";\n",
        "Math.hypotc": "\nreturn typeof Math.hypot === \"function\";\n",
        "Math.truncc": "\nreturn typeof Math.trunc === \"function\";\n",
        "Math.froundc": "\nreturn typeof Math.fround === \"function\";\n",
        "Math.cbrtc": "\nreturn typeof Math.cbrt === \"function\";\n"
    },
    "miscellaneous": {
        "duplicate property names in strict modec": "\n'use strict';\nreturn this === undefined && ({ a:1, a:1 }).a === 1;\n      ",
        "no semicolon needed after do-whilec": "\ndo {} while (false) return true;\n      ",
        "no assignments allowed in for-in headc": "\ntry {\n  eval('for (var i = 0 in {}) {}');\n}\ncatch(e) {\n  return true;\n}\n      ",
        "accessors aren't constructorsc": "\ntry {\n  new (Object.getOwnPropertyDescriptor({get a(){}}, 'a')).get;\n} catch(e) {\n  return true;\n}\n      ",
        "Object static methods accept primitivesc": "\nvar methods = ['freeze', 'seal', 'preventExtensions', 'getOwnPropertyDescriptor',\n  'getPrototypeOf', 'isExtensible', 'isSealed', 'isFrozen', 'keys', 'getOwnPropertyNames'];\nfor (var i = 0; i < methods.length; i++) {\n  Object[methods[i]](20000, \"foo\");\n  Object[methods[i]](\"foo\", \"foo\");\n  Object[methods[i]](false, \"foo\");\n}\nreturn true;\n      ",
        "Invalid Datec": "\nreturn new Date(NaN) + \"\" === \"Invalid Date\";\n      ",
        "RegExp constructor can alter flagsc": "\nreturn new RegExp(/./im, \"g\").global === true;\n      "
    },
    "__proto___in_object_literals": {
        "basic supportc": "\nreturn { __proto__ : [] } instanceof Array\n  && !({ __proto__ : null } instanceof Object);\n      ",
        "multiple __proto__ is an errorc": "\ntry {\n  eval(\"({ __proto__ : [], __proto__: {} })\");\n}\ncatch(e) {\n  return true;\n}\n      ",
        "not a computed propertyc": "\nif (!({ __proto__ : [] } instanceof Array)) {\n  return false;\n}\nvar a = \"__proto__\";\nreturn !({ [a] : [] } instanceof Array);\n      ",
        "not a shorthand propertyc": "\nif (!({ __proto__ : [] } instanceof Array)) {\n  return false;\n}\nvar __proto__ = [];\nreturn !({ __proto__ } instanceof Array);\n      ",
        "not a shorthand methodc": "\nif (!({ __proto__ : [] } instanceof Array)) {\n  return false;\n}\nreturn !({ __proto__(){} } instanceof Function);\n      "
    },
    "Object.prototype.__proto__": {
        "get prototypec": "\nvar A = function(){};\nreturn (new A()).__proto__ === A.prototype;\n      ",
        "set prototypec": "\nvar o = {};\no.__proto__ = Array.prototype;\nreturn o instanceof Array;\n      ",
        "correct property descriptorc": "\nvar desc = Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\");\nvar A = function(){};\n\nreturn (desc\n  && \"get\" in desc\n  && \"set\" in desc\n  && desc.configurable\n  && !desc.enumerable);\n      "
    }
}